(window.webpackJsonp=window.webpackJsonp||[]).push([[381],{"7eGI":function(t,e,n){"use strict";n.r(e);n("DbwS"),n("t91x");var o=n("6DIm"),s=n("AF31"),i=n("Iptl"),a=n("+53n"),l=n("RuhY");o.default.use(l.a,{router:s.a});var c={name:"CommonFlyout",mixins:[i.a],data:function(){var t=this;return{docVersion:"1.0.1",componentNamespace:"Apps/Agent",componentPath:"Apps/Agent/Components/Common/CommonFlyout",component:a.default,hasConfirmCloseCallback:!1,example:{name:{default:"TestFlyout",type:"input"},label:{type:"input"},size:{default:"md",type:"select",options:["sm","md","lg"]},placement:{default:"right",type:"select",options:["top","left","right"]},title:{default:"My Flyout",type:"input"},titlePlaceholders:{type:"array"},hideHeader:{type:"checkbox"},closeButtonTitle:{type:"input"},isExpanded:{type:"checkbox"},isCentered:{type:"checkbox"},isFullHeight:{type:"checkbox"},isFullscreen:{type:"checkbox"},isInWidget:{type:"checkbox"},isModal:{type:"checkbox"},hasFrostedOverlay:{type:"checkbox"},showOrganizerSidebar:{type:"checkbox"},hasNoContentPadding:{type:"checkbox"},confirmCloseCallback:{type:"function"},hideExpandButton:{type:"checkbox"},hideMinimizeButton:{type:"checkbox"},slots:{default:{content:"\x3c!-- FLYOUT CONTENT GOES HERE --\x3e",render:function(t){return function(){return t("p",{},["This is a sample flyout content."])}}}}},customCode:[{tag:"b-checkbox",class:["mb-2"],directives:[],props:{checked:this.hasConfirmCloseCallback},on:{change:function(e){t.hasConfirmCloseCallback=e}},value:"Confirm closing of the flyout"},{tag:"b-button",directives:[],props:{variant:"primary"},on:{click:function(){t.$flyout.open("TestFlyout",{},function(){return new Promise(function(e,n){t.hasConfirmCloseCallback?t.$bvModal.msgBoxConfirm("Do you want to close this flyout?").then(function(t){t?e():n()}):e()})})}},value:"Open Flyout"},{tag:"b-button",class:["ml-2"],directives:[],props:{variant:"secondary"},on:{click:function(){t.$flyout.close("TestFlyout")}},value:"Close Flyout"},{tag:"b-button",class:["ml-2"],directives:[],props:{variant:"info"},on:{click:function(){t.$flyout.toggle("TestFlyout",{},function(){return new Promise(function(e,n){t.hasConfirmCloseCallback?t.$bvModal.msgBoxConfirm("Do you want to close this flyout?").then(function(t){t?e():n()}):e()})})}},value:"Toggle Flyout"}]}}},r=n("psIG"),u=Object(r.a)(c,function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"DesignSystem__Main"},[n("h1",{staticClass:"DesignSystem"},[t._v("\n            "+t._s(t.summary)+"\n            "),n("b-badge",{attrs:{variant:t.docVersion!==t.version?"warning":"info"}},[t._v("\n                "+t._s(t.version)+"\n            ")])],1),t._v(" "),n("p",[t._v("\n            "+t._s(t.description)+"\n        ")]),t._v(" "),t.docVersion!==t.version?[n("CommonNotice",{attrs:{text:"Please verify all changes to the component API have been properly documented\n                    ("+t.docVersion+" !== "+t.version+").",title:"Documentation for this component is out of date!",type:"Warning"}})]:t._e(),t._v(" "),t._m(0),t._v(" "),n("h2",{staticClass:"DesignSystem"},[t._v("\n            Unique names and labels\n        ")]),t._v(" "),t._m(1),t._v(" "),n("h2",{staticClass:"DesignSystem"},[t._v("\n            Flyout Manager\n        ")]),t._v(" "),n("p",[t._v("\n            This component depends on the flyout manager plugin, which serves as a central place for managing flyouts.\n            It keeps track of opened flyout, registered callbacks and provides a globally available API to manage them\n            from any component.\n        ")]),t._v(" "),n("CommonNotice",{attrs:{text:"Flyouts mechanism support only a single one at a time. Triggering open of another flyout will\n                first try to close currently opened one. If there is a confirmation callback tied to the previous flyout\n                it will be triggered accordingly, and opening of the new one will depend on its resolution.",title:"One at a time",type:"Warning"}}),t._v(" "),t._m(2),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("this.$flyout.open('MyFlyout', { key: value }, confirmCloseCallback);")]),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("\n            The confirm close callback should be a function that returns a promise. For the flyout to be closed, promise\n            should resolve. In case of the promise rejection, flyout will remain open, and the closing of the flyout\n            abandoned. Here is an example callback that triggers a confirmation modal message, and closes the flyout\n            accordingly:\n        ")]),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("confirmCloseCallback () {\n    return new Promise((resolve, reject) => {\n        this.$bus.$emit('showModalMessage', {\n            id: 'sampleCloseConfirmation',\n            heading: translatable('Confirmation'),\n            text: translatable('Do you really want to close this flyout?'),\n            buttonBehavior: 'yesNo',\n            okCallback: () => {\n                resolve();\n            },\n            cancelCallback: () => {\n                reject();\n            },\n        });\n    });\n}")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("this.$flyout.close('MyFlyout');")]),t._v(" "),t._m(6),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("this.$flyout.toggle('MyFlyout', { key: value }, confirmCloseCallback);")]),t._v(" "),n("p",[t._v("\n            All three management methods return promises, so it's always possible to do certain actions that depends on\n            the successful call. For example, to execute a certain piece of code only if flyout was actually closed,\n            just resolve the close promise:\n        ")]),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("this.$flyout.close('MyFlyout').then(() => {\n    console.log('Flyout is now indeed closed.');\n});")]),t._v(" "),n("h2",{staticClass:"DesignSystem"},[t._v("\n            Callback Alternatives\n        ")]),t._v(" "),t._m(7),t._v(" "),n("CommonNotice",{attrs:{text:"Please note that confirm close callback which is passed via a prop will be register when\n                the component is initialized (created). If you provide another callback when opening the flyout, it will\n                win in the end, and replace the original one from the prop. It is not good idea to mix the two\n                approaches, as it can lead to unexpected behavior.",title:"Do not mix",type:"Warning"}}),t._v(" "),n("p",[t._v("\n            Confirm close callbacks can also be registered manually, by calling appropriate method of the flyout\n            manager:\n        ")]),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("this.$flyout.registerCallback('MyFlyout', newCallback);")]),t._v(" "),n("p",[t._v("Similarly, currently registered callbacks of any flyout can be deregistered in the following way:")]),t._v(" "),n("pre",{staticClass:"DesignSystem"},[t._v("this.$flyout.deregisterCallback('MyFlyout');")]),t._v(" "),n("b-tabs",{staticClass:"DesignSystem__TabContent"},[n("b-tab",{staticClass:"tab-pane",attrs:{title:"Demo","title-link-class":"DesignSystem",active:""}},[n("DocsExample",{attrs:{component:t.component,"component-namespace":t.componentNamespace,"component-path":t.componentPath,props:t.props,events:t.events,slots:t.slots,"custom-code":t.customCode,example:t.example}})],1),t._v(" "),n("b-tab",{staticClass:"tab-pane",attrs:{title:"API Documentation","title-link-class":"DesignSystem"}},[n("DocsComponentAPI",{attrs:{props:t.props,events:t.events,slots:t.slots,methods:t.methods}})],1)],1)],2)},[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            To use this component, simply register it for your namespace and use it like any other component (see sample\n            template below). However, in order to manage it, please consult the "),e("strong",[this._v("Flyout Manager")]),this._v("\n            section below.\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            Every flyout should have a unique name across the whole app, which can be set via the required\n            "),e("code",[this._v("name")]),this._v(" prop. In addition to this, you are expected to provide a label that best describes the\n            context of the flyout via the "),e("code",[this._v("label")]),this._v(" prop, which will be used by the screen announcer on certain\n            events.\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            To open a flyout, simply call the "),e("code",[this._v("$flyout.open()")]),this._v(" method with its name, an optional payload\n            object and a confirm close callback:\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            Payload object can contain arbitrary key/value data, and will be passed to the wrapping component via the\n            "),e("code",[this._v("open")]),this._v(" event. In addition to this, it's possible to set some options via this payload, for\n            example, a useful "),e("code",[this._v("isSticky")]),this._v(" property that will make the flyout stick to the header when\n            scrolling. On the other hand "),e("code",[this._v("hasFixedBody")]),this._v(" property will determine if the flyout body is\n            scrollable or not, so the main body scrollbar can be hidden.\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            For more options on how to configure a confirm close callback, read the\n            "),e("strong",[this._v("Callback Alternatives")]),this._v(" below.\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            To close an open flyout programmatically, simply call the "),e("code",[this._v("$flyout.close()")]),this._v(" with the name of the\n            flyout in question:\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            Finally, to toggle a flyout without knowing its state, call the "),e("code",[this._v("$flyout.toggle()")]),this._v(" method exactly\n            the same as the open:\n        ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("\n            In addition to specifying confirm close callback when opening the flyout, you can also provide a suitable\n            function via the "),e("code",[this._v("closeConfirmCallback")]),this._v(" prop instead. This allows for keeping the complete logic\n            for a certain flyout in the same component.\n        ")])}],!1,null,null,null);e.default=u.exports},Iptl:function(t,e,n){"use strict";n("2Tod"),n("ABKx"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("asZ9"),n("GkPX");var o=n("OvAC"),s=n.n(o),i=n("nS/B"),a=n("lOrp");function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,o)}return n}e.a={components:{CommonNotice:function(){return n.e(406).then(n.bind(null,"mkLc"))},DocsExample:function(){return n.e(93).then(n.bind(null,"GD02"))},DocsComponentAPI:function(){return n.e(96).then(n.bind(null,"8txu"))}},computed:function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach(function(e){s()(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({doc:function(){var t=this.componentNamespace||"Components";return this.$store.getters.componentDoc[t][this.$options.name]||[]},summary:function(){return Object(i.b)(this.doc,"summary")},version:function(){return Object(i.b)(this.doc,"version")},description:function(){return Object(i.b)(this.doc,"description")},props:function(){return Object(i.a)(this.doc,"prop")},slots:function(){return Object(i.a)(this.doc,"slot")},events:function(){return Object(i.a)(this.doc,"event")},methods:function(){return Object(i.a)(this.doc,"method")},initialFrontend:function(){var t=this.componentNamespace.split("/");return t.length>1?t[1]:""}},Object(a.b)(["frontend"])),mounted:function(){var t=this;this.frontend!==this.initialFrontend&&this.$store.commit("frontend",{frontend:this.initialFrontend}),this.$nextTick(function(){t.$test.setFlag("DocComponent::".concat(t.component.name,"::Mounted"))})}}},RuhY:function(t,e,n){"use strict";n("DbwS"),n("t91x");var o=n("SDJZ"),s=n.n(o),i=n("NToG"),a=n.n(i),l=function(){function t(){s()(this,t)}return a()(t,null,[{key:"install",value:function(t,e){var n=e&&e.router;if(!n)throw new Error("Router instance not found! Did you pass it via options?");t.prototype.$flyout=new t({data:function(){return{flyout:"",callbacks:{}}},created:function(){var t=this;n.beforeEach(function(e,n,o){!t.flyout||e.params&&e.params.skipClosingFlyout?o():t.close(t.flyout).then(function(){o()}).catch(function(){o(!1)})})},methods:{open:function(t,e,n){var o=this;return new Promise(function(s,i){if(t){if(o.flyout&&o.flyout===t)return o.openFlyout(t,e),void s(t);n&&o.registerCallback(t,n),o.flyout?o.close(o.flyout).then(function(){o.openFlyout(t,e),s(t)}).catch(function(){i()}):(o.openFlyout(t,e),s(t))}else i(new Error("open(): missing flyout name!"))})},close:function(t){var e=this;return new Promise(function(n,o){t?!e.flyout||e.flyout&&e.flyout!==t?o(new Error("close(): flyout '".concat(t,"' not open!"))):e.callbacks[t]&&"function"==typeof e.callbacks[t]?e.callbacks[t].call().then(function(){e.closeFlyout(t),n(t)}).catch(function(){o()}):(e.closeFlyout(t),n(t)):o(new Error("close(): missing flyout name!"))})},toggle:function(t,e,n){var o=this;return new Promise(function(s,i){t?o.flyout&&o.flyout===t?o.close(t).then(function(){s()}).catch(function(){i()}):o.open(t,e,n).then(function(){s()}).catch(function(){i()}):i(new Error("toggle(): missing flyout name!"))})},registerCallback:function(t,e){if(!t)throw new Error("registerCallback(): missing flyout name!");if(!e)throw new Error("registerCallback(): missing confirm close callback!");if("function"!=typeof e)throw new Error("registerCallback(): confirm close callback must be a function!");this.$set(this.callbacks,t,e)},deregisterCallback:function(t){if(!t)throw new Error("deregisterCallback(): missing flyout name!");this.callbacks[t]&&this.$delete(this.callbacks,t)},openFlyout:function(e,n){this.flyout=e,t.prototype.$bus.$emit("openFlyout",{name:e,data:n}),this.$test.setFlag("OpenFlyout::".concat(e))},closeFlyout:function(e,n){this.flyout="",t.prototype.$bus.$emit("closeFlyout",{name:e,data:n}),this.$test.setFlag("CloseFlyout::".concat(e))}},render:function(){return null}})}}]),t}();e.a=l}}]);