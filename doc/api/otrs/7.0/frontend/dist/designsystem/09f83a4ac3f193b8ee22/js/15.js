(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{NwzM:function(e,n,t){"use strict";t.r(n);var s={name:"DocsHome",mounted:function(){var e=this;this.$nextTick(function(){e.$test.setFlag("DocsHome::Mounted")})}},o=t("psIG"),i=Object(o.a)(s,function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"main documentation-content"},[t("h1",{staticClass:"design-system"},[e._v("Introduction")]),e._v(" "),t("p",[e._v("\n        Thank you for using the OTRS Design System. First of all, we would like to give you an introduction\n        of what this design system is all about and how you can use it. Generally speaking, the design\n        system is a collection of components for the user interface of OTRS. In addition, we have set\n        up some guidelines for developers to help them understand how to use those components and how\n        to adapt them.\n    ")]),e._v(" "),t("h2",{staticClass:"design-system"},[e._v("Why a design system?")]),e._v(" "),t("p",[e._v("\n        In former times, the OTRS user interface was just a collection of screens. Each screen had it's\n        own perl frontend module and it's own html template (based on the template toolkit syntax).\n        To apply styles to this screen, OTRS would load some common CSS files and some screen specific\n        CSS files. Re-using elements on different places would basically happen by copying and pasting\n        HTML and CSS back and forth. Not only would this approach lead to inconsistencies across the\n        application, but it would also slow down the developer instead of helping them creating new\n        screens and features.\n    ")]),e._v(" "),t("p",[e._v('\n        For OTRS 7, we introduced a new approach: screens are no longer a monolithic composition of\n        elements and code in general, but an assembly of many different components. Each component\n        has it\'s very own set of "skills":\n    ')]),e._v(" "),e._m(0),e._v(" "),t("p",[e._v("\n        Both the API and CSS is being encapsulated in the component. You don't need to take care of loading\n        the right CSS files or including stuff manually into your code. Just load the component, tell it what\n        to do and you're done.\n    ")]),e._v(" "),t("p",[e._v("\n        Now speaking of the OTRS design system, this is the place where developers can find all those\n        components. It's like a library where you can search for the component which features the\n        functionality you need, read through it's documentation, try out it's API and finally grab\n        it and use it.\n    ")]),e._v(" "),t("h2",{staticClass:"design-system"},[e._v("Design system structure")]),e._v(" "),t("p",[e._v('\n        Besides some general aspects like this chapter or the other chapters in the "guidelines" section,\n        you\'ll find are two areas for the components:\n    ')]),e._v(" "),e._m(1),e._v(" "),t("b-link",{staticClass:"design-system",attrs:{to:"/documentation/components-usage"}},[e._v("\n        Read more on how to work with components\n        "),t("CommonIcon",{attrs:{icon:"long-arrow-alt-right"}})],1)],1)},[function(){var e=this.$createElement,n=this._self._c||e;return n("ul",[n("li",[this._v("\n            The component has it's own API which can be used to have it displaying and processing data.\n        ")]),this._v(" "),n("li",[this._v("\n            The component brings it's own CSS which make sure the component looks and behaves the same\n            regardless of where it's being used.\n        ")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("ul",[n("li",[this._v("\n            Shared Components: this section contains all components which might be used in all interfaces\n            (external interface and agent interface).\n        ")]),this._v(" "),n("li",[this._v("\n            External Interface: here you'll find components which are specific to the external interface\n            and which should not be used in other interfaces.\n        ")])])}],!1,null,null,null);i.options.__file="DocsHome.vue";n.default=i.exports}}]);