(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{ugc9:function(e,n,t){"use strict";t.r(n);var s={name:"DocsStyleGuide",components:{CommonNotice:function(){return t.e(105).then(t.bind(null,"mkLc"))}}},o=t("psIG"),i=Object(o.a)(s,function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"DesignSystem__Main DesignSystem__DocumentationContent"},[t("h1",{staticClass:"DesignSystem"},[e._v("\n            Style Guide\n        ")]),e._v(" "),t("h2",{staticClass:"DesignSystem"},[e._v("\n            BEM Naming Guide\n        ")]),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            BEM in General\n        ")]),e._v(" "),e._m(0),e._v(" "),t("p",[e._v("\n            The goal of the BEM naming is to convey the message of existing component structure just by reading the\n            style rules, or vice-versa. By adhering to certain number of simple rules, even scalability goes away as a\n            problem, since it allows for arbitrarily complex structures to be defined in a more readable way.\n        ")]),e._v(" "),t("p",[e._v("\n            The naming scheme is defined by three possible parts of every BEM adhering class name:\n        ")]),e._v(" "),e._m(1),e._v(" "),t("p",[e._v("\n            For example:\n        ")]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v(".Block {\n    width: 250px;\n    text-align: justify;\n}\n\n.Block__Element {\n    color: #000;\n    font-size: 12px;\n}\n\n.Block__Element--Modifier {\n    color: #FFF;\n}")]),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            BEM in OTRS Code\n        ")]),e._v(" "),t("p",[e._v("\n            We use BEM to avoid conflicts with our reusable components. As a naming scheme for us we can adapt the upper\n            example to look something like this:\n        ")]),e._v(" "),t("pre",{staticClass:"DesignSystem mb-3"},[e._v(".MyComponent {\n    width: 250px;\n    text-align: justify;\n}\n\n.MyComponent__MyElementInThisComponent {\n    color: #000;\n    font-size: 12px;\n}\n\n.MyComponent__MyElementInThisComponent--MyElementModifier {\n    color: #FFF;\n}")]),e._v(" "),t("p",[e._v("\n            Our components contain many nested elements. To avoid unnecessarily long identifiers, we have agreed to a\n            maximum of three elements per identifier. The modifier is not included and may be appended afterwards.\n        ")]),e._v(" "),t("p",[e._v("\n            If you run in a situation where it seems that you need more than three elements, try to rename elements and\n            use more appropriate names.\n        ")]),e._v(" "),t("p",[e._v("Block modifier should always be on the same level as the block definition was made.")]),e._v(" "),t("p",[e._v("Element modifier should always be on the same level as the element definition was made.")]),e._v(" "),t("p",[e._v("Therefore the following rules must apply:")]),e._v(" "),e._m(2),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            Basic BEM Examples\n        ")]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v('\x3c!--\n    Example #1\n      A component with two elements.\n--\x3e\n<div class="CommonCard">\n    <div class="CommonCard__Header">\n        <h3>Card headline</h3>\n    </div>\n    <div class="CommonCard__Content">\n        Card content\n    </div>\n</div>\n')]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v('\x3c!--\n    Example #2\n      A button with a modifier.\n--\x3e\n<div class="FormButton FormButton--Success">\n    Done\n</div>\n')]),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            BEM and SCSS\n        ")]),e._v(" "),t("p",[e._v("\n            You can combine the advantages of BEM and SCSS to further reduce the code size. Just apply the BEM naming\n            rules and nest the classes in a SCSS style as you can see in the examples below.\n        ")]),e._v(" "),t("p",[e._v("\n            Going forward, we should aim to implement following guidelines in any new class names we define:\n        ")]),e._v(" "),e._m(3),e._v(" "),t("CommonNotice",{attrs:{text:"As the update process for the current code will be a larger task, we will update it one by one without\n                having a deadline. It is important for you to know that from now on we use the new rules every time we\n                create a new component.",title:"Note About Outdated Code",type:"Warning"}}),e._v(" "),t("CommonNotice",{attrs:{text:"If you need to implement a new feature within an old component don't hesitate to mix up the new class\n                name rules with the current used class names. Alternatively you can use the chance to migrate all the\n                code you are working on, if you have enough time. Be sure that there will be another review process\n                where all leftover code fragments will be updated, but we should not continue to postpone these tasks\n                indefinitely.",type:"Warning"}}),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            SCSS Examples\n        ")]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v("/**\n * Example #3\n *   Here you can see a `CommonCard` component with two elements `CommonCard__Header`\n *   and `CommonCard__Content`.\n */\n.CommonCard {\n    padding: 1rem;\n\n    &__Header {\n        h3 {\n            font-weight: 600;\n            text-decoration: underline;\n        }\n    }\n\n    &__Content {\n        background-color: grey;\n    }\n}\n")]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v("/**\n * Example #4\n *   Here is a `FormButton` component with three possible modifiers `FormButton--Warning`,\n *   `FormButton--Danger` and `FormButton--Success`.\n */\n.FormButton {\n    padding: .25rem .5rem;\n    min-width: 3rem;\n    text-align: center\n    background-color: grey;\n\n    &--Warning {\n        background-color: orange;\n    }\n\n    &--Danger {\n        background-color: red;\n    }\n\n    &--Success {\n        background-color: green;\n    }\n}\n")]),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            BEM, SCSS and Reusability\n        ")]),e._v(" "),t("p",[e._v("\n            What if you have a fully working component and now you need to reuse this component at another place with a\n            slightly different layout?\n        ")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),t("p",[e._v("\n            Therefore the following rules apply to us:\n        ")]),e._v(" "),e._m(8),e._v(" "),t("p",[e._v("\n            Furthermore all these rules should be applied to our SCSS mixins, variable names and functions. Of course,\n            the results will slightly differ there, but applying all these rules to our whole CSS codebase will lead to\n            the more readable, understandable and maintainable code in the future.\n        ")]),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            Complex examples\n        ")]),e._v(" "),e._m(9),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v("/**\n * Example #5\n *   `CommonAvatarAgent` component with base rules.\n **/\n.CommonAvatarAgent {\n    img {\n        border: 3px solid grey;\n        border-radius: 3.125rem;\n        height: 3.125rem;\n        width: 3.125rem;\n    }\n}\n\n/**\n * Example #6\n *   `BusinessObjectWidgetStripePeople` component to override the rules from\n *   `CommonAvatarAgent`.\n **/\n.BusinessObjectWidgetStripePeople {\n    .CommonAvatarAgent {\n        img {\n            border: 2px solid grey;\n            border-radius: 2rem;\n            height: 2rem;\n            width: 2rem;\n        }\n    }\n}\n")]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v('\x3c!--\n    Example #7a\n      A few nested elements which break the `max-3-elements` rule.\n      Don\'t use this code! See the next example for a valid version.\n--\x3e\n<div class="MyAwesomeComponent">\n    <ul class="MyAwesomeComponent__List">\n        <li class="MyAwesomeComponent__List__Item">\n            <div class="MyAwesomeComponent__List__Item__Card">\n                I am a card styled code.\n                <span class="MyAwesomeComponent__List__Item__Card__Status">\n                    Active\n                </span>\n            </div>\n        </li>\n        <li class="MyAwesomeComponent__List__Item">\n            <div class="MyAwesomeComponent__List__Item__Card--Disabled">\n                I am a second card styled code with a modifier.\n                <span class="MyAwesomeComponent__List__Item__Card__Status">\n                    Inactive\n                </span>\n            </div>\n        </li>\n    </ul>\n</div>\n')]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v('\x3c!--\n    Example #7b\n      A few nested elements with fixed `max-3-elements` rule. Please note that there are more\n      valid solutions. You just need to rename your elements, create own components for\n      reusable code or find another appropriate solution. In this example `CodeCard` is an\n      own component now.\n--\x3e\n<div class="MyAwesomeComponent">\n    <ul class="MyAwesomeComponent__List">\n        <li class="MyAwesomeComponent__List__Item">\n            <div class="CodeCard">\n                I am a card styled code.\n                <span class="CodeCard__Status">\n                    Active\n                </span>\n            </div>\n        </li>\n        <li class="MyAwesomeComponent__List__Item">\n            <div class="CodeCard--Disabled">\n                I am a second card styled code with a modifier.\n                <span class="CodeCard__Status">\n                    Inactive\n                </span>\n            </div>\n        </li>\n    </ul>\n</div>\n')]),e._v(" "),t("pre",{staticClass:"DesignSystem"},[e._v('\x3c!--\n    Example #7c\n      A few nested elements with fixed `max-3-elements` rule. Please note that there are more\n      valid solutions. You just need to rename your elements, create own components for\n      reusable code or find another appropriate solution. In this example `CodeList` and\n      `CodeCard` are an own components now.\n--\x3e\n<div class="MyAwesomeComponent">\n    <ul class="CodeList">\n        <li class="CodeList__Item">\n            <div class="CodeCard">\n                I am a card styled code.\n                <span class="CodeCard__Status">\n                    Active\n                </span>\n            </div>\n        </li>\n        <li class="CodeList__Item">\n            <div class="CodeCard--Disabled">\n                I am a second card styled code with a modifier.\n                <span class="CodeCard__Status">\n                    Inactive\n                </span>\n            </div>\n        </li>\n    </ul>\n</div>\n')]),e._v(" "),t("h3",{staticClass:"DesignSystem"},[e._v("\n            Read more\n        ")]),e._v(" "),e._m(10)],1)},[function(){var e=this.$createElement,n=this._self._c||e;return n("p",[n("strong",[this._v("B")]),this._v("lock/"),n("strong",[this._v("E")]),this._v("lement/"),n("strong",[this._v("M")]),this._v("odifier (or BEM in short) is a naming\n            style of CSS classes. It is used by convention to improve readability of the CSS code, and is especially\n            useful in component-based design systems which are relying on high re-usability of the code.\n        ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ol",[t("li",[t("code",[e._v("Block")]),e._v(" - the parent or root element, must be used on its own")]),e._v(" "),t("li",[t("code",[e._v("Element")]),e._v(" - one of child elements of the block, must be used within a block reference")]),e._v(" "),t("li",[t("code",[e._v("Modifier")]),e._v(" - one of the possible states of either the block or element, must be used within a\n                block or an element reference\n            ")])])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ol",[t("li",[t("code",[e._v("MyComponent")]),e._v(" is the top level class.")]),e._v(" "),t("li",[t("code",[e._v("MyComponent__MyElementInThisComponent")]),e._v(" must be below "),t("code",[e._v("MyComponent")])]),e._v(" "),t("li",[t("code",[e._v("MyComponent__MyElementInThisComponent--MyElementModifier")]),e._v(" should be on the same level\n                as "),t("code",[e._v("MyComponent__MyElementInThisComponent")])]),e._v(" "),t("li",[t("code",[e._v("MyComponent--MyComponentModifier")]),e._v(" should be on the same level as\n                "),t("code",[e._v("MyComponent")])]),e._v(" "),t("li",[t("code",[e._v("MyElement--MyElementModifier")]),e._v(" should be on the same level as "),t("code",[e._v("MyElement")])])])},function(){var e=this.$createElement,n=this._self._c||e;return n("ol",[n("li",[n("code",[this._v("MyComponent")]),this._v(" should be identical to the real component name")]),this._v(" "),n("li",[this._v("\n                If it's not possible to use the component's name choose an appropriate name and document the reason for\n                this decision in a suitable comment.\n            ")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("\n            Let's use our "),n("code",[this._v("CommonAvatarAgent")]),this._v(" component as an example.\n        ")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("\n            We use it in our "),n("code",[this._v("OrganizerSidebar")]),this._v(" and therefore we formatted it to show a picture with a\n            rounded border and height/width of "),n("code",[this._v("3.125rem")]),this._v(".\n        ")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("\n            To reuse it in our "),n("code",[this._v("BusinessObjectWidgetStripePeople")]),this._v(" component we need to update the border\n            radius and the width/heigth with different values.\n        ")])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("\n            The correct location for these new values is the SCSS file of the\n            "),n("code",[this._v("BusinessObjectWidgetStripePeople")]),this._v(" component because we need the new values only within this\n            component.\n        ")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ol",[t("li",[t("code",[e._v("`MySubComponent`")]),e._v(" must be below "),t("code",[e._v("`MyMainComponent`")])]),e._v(" "),t("li",[t("code",[e._v("`MySubComponent`")]),e._v(" SCSS overrides must be below the "),t("code",[e._v("`MyMainComponent`")]),e._v(" SCSS\n                block\n            ")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("p",[this._v("\n            Here is an example explained in the chapter above. Please note that the "),n("code",[this._v("CommonAvatarAgent")]),this._v("\n            overrides are below the "),n("code",[this._v("StripePeople")]),this._v(" rules:\n        ")])},function(){var e=this.$createElement,n=this._self._c||e;return n("ul",[n("li",[n("a",{attrs:{href:"https://getbem.com/",target:"_blank"}},[this._v("\n                    Original BEM Methodology Manifest\n                ")])]),this._v(" "),n("li",[n("a",{attrs:{href:"https://css-tricks.com/bem-101/",target:"_blank"}},[this._v("\n                    BEM 101\n                ")])]),this._v(" "),n("li",[n("a",{attrs:{href:"https://codeburst.io/understanding-css-bem-naming-convention-a8cca116d252",target:"_blank"}},[this._v("\n                    Understanding CSS BEM\n                ")])])])}],!1,null,null,null);n.default=i.exports}}]);